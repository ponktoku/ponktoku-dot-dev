---
import BaseLayout from "@/layouts/BaseLayout.astro";
import { LOCALES, useTranslations, type Lang } from "@/lib/i18n";
import { Image } from "astro:assets";
import { getRelativeLocaleUrl } from "astro:i18n";

import id from "@/assets/id-photo.jpg";

const locale = Astro.currentLocale as Lang;
const t = useTranslations(locale);

const title = t({
  en: "Contact me",
  ja: "連絡",
});

export const getStaticPaths = () =>
  Object.keys(LOCALES).map((lang) => ({
    params: { lang },
  }));
---

<BaseLayout {title}>
  <div class="screen-container mt-12 animate-fade">
    <div class="screen-wrapper">
      <div class="screen border">
        <div class="content">
          <!-- Your content here -->
          <h1 class="heading">
            <div class="text-xl md:text-3xl">
              <span>[NAME]</span>
              <span>{t({ en: "DANNY BAO", ja: "バオ・ダニー" })}</span>
            </div>
            <div class="flex gap-1">
              <span class="items-start">AU</span>
              <span class="text-2xl md:text-4xl">02</span>
            </div>
          </h1>

          <h2 class="info-title">[INFORMATION]</h2>
          <div class="line"></div>

          <section class="info">
            <div class="id">
              <span class="id-photo-label">ID PHOTO</span>
              <div class="id-box"></div>
              <Image src={id} alt="Danny Bao operator ID photo" class="p-2" />
              <div class="plus">+</div>
            </div>
            <div class="details">
              <div class="font-extralight">
                <h3 class="mr-10 inline">RACE</h3>
                <span>{t({ en: "HOMO SAPIEN", ja: "ホモサピエンス" })}</span>
              </div>
              <div class="flex gap-12 font-extralight">
                <h3>BORN</h3>
                <div class="flex flex-col">
                  <span class="md:text-xl"
                    >{t({ en: "AUGUST | 2001", ja: "2001 | 8月" })}</span
                  >
                  <span class="text-sm font-extrabold"
                    >{t({ en: "MELBOURNE", ja: "メルボルン" })}</span
                  >
                </div>
              </div>
              <div class="font-extralight">
                <h3 class="mr-5 inline">HEIGHT</h3>
                <span>1.72<span class="text-xs">M</span></span>
              </div>
              <div class="line"></div>
              <div class="font-bold">
                <h3 class="">OPERATOR NAME</h3>
                <span class="ml-24 text-2xl md:text-3xl">"PONKTOKU"</span>
              </div>
              <div class="flex gap-12 font-bold">
                <h3>GENDER</h3>
                <span class="text-2xl">M</span>
              </div>
              <div class="flex items-end justify-end gap-4 font-bold">
                <span class="text-xs">MORE ABOUT OPERATOR</span>
                <a
                  href={getRelativeLocaleUrl(locale, "/about")}
                  class="more-button"
                >
                  <div class="more-left"></div>
                  <div class="more-dot"></div>
                  <div class="more-right"></div>
                </a>
              </div>
            </div>
          </section>
        </div>
      </div>
    </div>
  </div>

  <div class="mt-12 animate-fade leading-relaxed">
    <h2 class="text-center text-2xl font-light text-red-500 md:text-4xl">
      ACCESS GRANTED PERMISSION TO VIEW
    </h2>
    <h3 class="mt-3 text-center font-bold">ADDITIONAL INFORMATION</h3>

    <div class="mt-5 text-center">
      <h3 class="font-bold">EMAIL</h3>
      <a href="mailto:ponktoku.dev@gmail.com">ponktoku.dev@gmail.com</a>
    </div>
  </div>
</BaseLayout>

<style>
  .screen-container {
    perspective: 1000px;
  }

  .screen-wrapper {
    transform-style: preserve-3d;
    transition: transform 0.3s ease;
  }

  .screen {
    transform: translate3d(0, 0, 0);
  }

  .content {
    @apply border-4 border-red-500 p-3 text-black dark:text-white md:p-6;
  }

  .heading {
    @apply mb-4 flex items-center justify-between text-black dark:text-white;
  }

  .info-title {
    @apply bg-black py-0.5 font-extrabold text-white dark:bg-white dark:text-black;
  }

  .line {
    @apply my-2 h-[1px] bg-black dark:bg-white;
  }

  .info {
    @apply flex flex-col gap-5 md:flex-row md:gap-10;
  }

  .id {
    @apply relative mt-2 border border-black dark:border-white;
    @apply md:h-[276px] md:w-1/3;
  }

  .id-photo-label {
    @apply absolute -top-3 left-4 bg-hool-white-100 px-2 text-sm font-bold text-black dark:bg-ak-black-100 dark:text-white;
  }

  .id-box {
    @apply absolute -right-2 -top-[1px] h-7 w-2 bg-black dark:bg-white;
  }

  .plus {
    @apply absolute bottom-0 right-0 h-7 w-7 border-2 bg-black text-center text-white dark:border-white dark:text-white md:bottom-3 md:right-3;
  }

  .details {
    @apply mt-1 flex flex-grow flex-col gap-2;
  }

  .more-button {
    @apply relative h-5 w-5 border-2 border-black dark:border-white;
  }

  .more-left {
    @apply absolute -left-2 -top-2 h-4 w-4 bg-black dark:bg-white;
  }

  .more-dot {
    @apply absolute -left-1 -top-1 h-2 w-2 bg-white dark:bg-black;
  }

  .more-right {
    @apply absolute -bottom-2 -right-2 h-3 w-3 bg-black dark:bg-white;
  }
</style>

<script>
  const screen = document.querySelector(".screen-wrapper") as HTMLElement;
  const container = document.querySelector(".screen-container") as HTMLElement;

  container.addEventListener("mousemove", (e: MouseEvent) => {
    const { left, top, width, height } = container.getBoundingClientRect();
    const x = (e.clientX - left) / width;
    const y = (e.clientY - top) / height;

    const rotateX = (y - 0.5) * 20;
    const rotateY = (x - 0.5) * 20;

    screen.style.transform = `rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;
  });

  container.addEventListener("mouseleave", () => {
    screen.style.transform = "rotateX(0) rotateY(0)";
  });
</script>
