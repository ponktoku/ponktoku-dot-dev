---
import BaseLayout from "@/layouts/BaseLayout.astro";
import { LOCALES, useTranslations, type Lang } from "@/lib/i18n";
import { getCollection } from "astro:content";
import NoteCard from "@/components/NoteCard.astro";

const locale = Astro.currentLocale as Lang;
const t = useTranslations(locale);

const allNotes = (await getCollection("notes"))
  .filter((note) => note.id.split("/")[0] === locale)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const title = t({
  en: "Notes",
  ja: "ノート",
});

export const getStaticPaths = () =>
  Object.keys(LOCALES).map((lang) => ({
    params: { lang },
  }));
---

<BaseLayout title={title}>
  <h2 class="text-2xl font-bold text-ak-black-100 dark:text-hool-white-100">
    {
      t({
        en: "NOTES",
        ja: "ノート",
      })
    }
  </h2>
  <h3 class="text-sm">SPACE FOR RECORDING USEFUL KNOWLEDGE</h3>

  <section class="m-auto my-8 mb-12">
    <ul>
      {
        allNotes.map((note, index, notes) => {
          const [, ...slug] = note.id.split("/");
          const year = new Date(note.data.pubDate).getFullYear();
          const prevNote = notes[index - 1];
          const prevYear =
            prevNote && new Date(prevNote.data.pubDate).getFullYear();
          const showYear = year !== prevYear;

          return (
            <NoteCard
              title={note.data.title}
              date={note.data.pubDate}
              url={`/${locale}/notes/${slug.join("/")}`}
              showYear={showYear}
            />
          );
        })
      }
    </ul>
  </section>
</BaseLayout>
