---
import BaseLayout from "@/layouts/BaseLayout.astro";
import { LOCALES, useTranslations, type Lang } from "@/lib/i18n";
import { getCollection } from "astro:content";
import { multiFormatDate, capitaliseAll } from "@/lib/utils";

const locale = Astro.currentLocale as Lang;
const t = useTranslations(locale);

const allPosts = (await getCollection("blog"))
  .filter((post) => post.id.split("/")[0] === locale)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const title = t({
  en: "Blog",
  ja: "ブログ",
});

export const getStaticPaths = () =>
  Object.keys(LOCALES).map((lang) => ({
    params: { lang },
  }));
---

<BaseLayout title={title}>
  <h2 class="text-2xl font-bold text-ak-black-100 dark:text-hool-white-100">
    {
      t({
        en: "BLOG",
        ja: "ブログ",
      })
    }
  </h2>
  <h3 class="text-sm">SPACE FOR STORING INSIGHTS</h3>

  <section class="m-auto my-8 mb-12">
    <ul>
      {
        allPosts.map((post) => {
          const [, ...slug] = post.id.split("/");

          return (
            <li class="border-b border-hool-white-300 dark:border-ak-black-300">
              <a
                href={`/${locale}/blog/${slug.join("/")}/`}
                class="flex cursor-pointer flex-col items-start justify-between py-2 transition-colors hover:bg-hool-white-200 hover:text-hool-turquoise-300 dark:hover:bg-ak-black-200 dark:hover:text-hool-white-100 sm:flex-row sm:items-center sm:py-4"
              >
                <span class="font-semibold">{post.data.title}</span>
                {locale === "ja" && (
                  <time
                    datetime={post.data.pubDate.toISOString()}
                    class="text-sm, mt-0.5 whitespace-nowrap"
                  >
                    {post.data.pubDate.toLocaleDateString(locale)}
                  </time>
                )}
                {locale === "en" && (
                  <time
                    datetime={post.data.pubDate.toISOString()}
                    class="text-sm, mt-0.5 whitespace-nowrap"
                  >
                    {capitaliseAll(multiFormatDate(post.data.pubDate, "short"))}
                  </time>
                )}
              </a>
            </li>
          );
        })
      }
    </ul>
  </section>

  <!-- <section class="m-auto my-8 mb-12 text-sm">
    <div class="py-2 font-medium text-gray-500">
      <span class="grid grid-cols-9">
        <span class="col-span-1">Year</span>
        <span class="col-span-7">Title</span>
        <span class="col-span-1">Date</span>
      </span>
    </div>

    <ul>
      {
        allPosts.map((post, index, posts) => {
          const [, ...slug] = post.slug.split("/");

          const year = new Date(post.data.pubDate).getFullYear();
          const prevPost = posts[index - 1];
          const prevYear =
            prevPost && new Date(prevPost.data.pubDate).getFullYear();
          const showYear = year !== prevYear;
          const month = new Date(post.data.pubDate).getMonth() + 1;
          const date = new Date(post.data.pubDate).getDate();

          return (
            <li class="hover:bg-gray-100 active:bg-gray-200">
              {" "}
              <a href={`/${locale}/blog/${slug.join("/")}/`}>
                <span class="grid grid-cols-9 gap-0 border-t border-gray-200 py-4">
                  <time class="col-span-1 text-gray-500">
                    {showYear ? year : ""}
                  </time>
                  <span class="col-span-7">{post.data.title}</span>
                  <time class="col-span-1 text-gray-500">
                    {month}/{date}
                  </time>
                </span>
              </a>
            </li>
          );
        })
      }
    </ul>
  </section> -->
</BaseLayout>
