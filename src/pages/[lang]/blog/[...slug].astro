---
// This file is responsible for the display of the Content (blog posts)

import ArticleLayout from "@/layouts/ArticleLayout.astro";
import { getCollection, type CollectionEntry, render } from "astro:content";
import Prose from "@/components/Prose.astro";
import { formatDate } from "@/lib/utils";
import { useTranslations, type Lang } from "@/lib/i18n";
import BaseRightAside from "@/components/BaseRightAside.astro";
import TableOfContents from "@/components/TableOfContents.astro";
import { type THeadings } from "@/lib/types";

// type Props = {
//   post: CollectionEntry<"blog">;
// };

const locale = Astro.currentLocale as Lang;
const t = useTranslations(locale);

export async function getStaticPaths() {
  const posts: CollectionEntry<"blog">[] = await getCollection("blog");

  return posts.map((post) => {
    const [lang, ...slug] = post.id.split("/");
    return { params: { lang, slug: slug.join("/") || undefined }, props: post };
  });
}

const { lang }: { lang: string } = Astro.params;
const post = Astro.props;

if (!post) {
  return Astro.redirect(`/${lang}/404`);
}

// TODO: Find issue with types and fix
const { Content, remarkPluginFrontmatter, headings } = await render(post);
const title: string = post.data.title;
const date = formatDate(post.data.pubDate);

const validHeadings = headings.filter(
  (heading: THeadings) => heading.depth === 2 || heading.depth === 3,
);
---

<ArticleLayout {title}>
  <h1
    class="mb-1 mt-14 text-2xl font-bold text-hool-turquoise-300 dark:text-ak-blue"
  >
    {post.data.title}
  </h1>
  <h2 class="mb-1 text-black dark:text-white">{post.data.description}</h2>

  <div class="mb-3">
    {
      lang === "en" && (
        <time datetime={post.data.pubDate.toISOString()} class="text-sm">
          {date}
        </time>
      )
    }

    {
      lang === "ja" && (
        <time
          datetime={post.data.pubDate.toISOString()}
          class="text-sm text-hool-grey-light dark:text-ak-black-400"
        >
          {post.data.pubDate.toLocaleDateString(lang)}
        </time>
      )
    }

    <span class="inline-block text-sm"
      >・ {remarkPluginFrontmatter.minutesRead}</span
    >
  </div>

  {
    post.data.updatedDate && (
      <div class="mt-6 rounded-md border border-teal-500 bg-teal-600/20 px-4 py-2 text-sm text-teal-800 dark:border-blue-500 dark:bg-blue-600/20 dark:text-blue-200 sm:text-base">
        <span class="font-semibold">
          {t({ en: "Last updated: ", ja: "更新: " })}
        </span>
        <time datetime={post.data.updatedDate.toISOString()} class="font-light">
          {post.data.updatedDate.toLocaleDateString(lang)}
        </time>
      </div>
    )
  }

  {
    validHeadings.length > 0 && (
      <BaseRightAside>
        <TableOfContents headings={validHeadings} />
      </BaseRightAside>
    )
  }

  <Prose className="mt-12">
    <Content />
  </Prose>
</ArticleLayout>
