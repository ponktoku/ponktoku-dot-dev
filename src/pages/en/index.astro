---
import { useTranslations, type Lang } from "@/lib/i18n";
import BaseLayout from "@/layouts/BaseLayout.astro";
import IconLink from "@/components/icon-link";
import { Image } from "astro:assets";
import dannyColour from "@/assets/colour.jpg";
import Skill from "@/components/Skill.astro";
import { skills } from "@/lib/consts";
import { getCollection, type CollectionEntry } from "astro:content";
import { multiFormatDate } from "@/lib/utils";
import { DoubleArrow } from "@/components/ui/icons";
import { getRelativeLocaleUrl } from "astro:i18n";

const locale = Astro.currentLocale as Lang;
const t = useTranslations(locale);

const blogPosts: CollectionEntry<"blog">[] = (await getCollection("blog"))
  .filter((post) => post.slug.split("/")[0] === locale)
  .sort(
    (a: CollectionEntry<"blog">, b: CollectionEntry<"blog">) =>
      b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
  );

const notes: CollectionEntry<"notes">[] = (await getCollection("notes"))
  .filter((post) => post.slug.split("/")[0] === locale)
  .sort(
    (a: CollectionEntry<"notes">, b: CollectionEntry<"notes">) =>
      b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
  );

const recentBlogPosts: CollectionEntry<"blog">[] = blogPosts.slice(0, 3);
const recentNotes: CollectionEntry<"notes">[] = notes.slice(0, 3);

const { lang } = Astro.params;
---

<BaseLayout lang={lang}>
  <section class="mb-10 flex items-center justify-center">
    <div class="flex gap-6">
      <figure class="relative">
        <Image
          src={dannyColour}
          alt="Danny Bao Photo"
          class="transition-filter rounded-full shadow-xl grayscale filter duration-300 ease-in-out hover:filter-none"
          loading="lazy"
          width="150"
          height="150"
          decoding="async"
        />
        <span
          class="absolute bottom-0 flex h-10 w-10 items-center justify-center rounded-full border-t border-transparent bg-hool-white-200 text-center align-middle shadow-md dark:border-zinc-700 dark:bg-zinc-800 dark:shadow-none md:left-28"
          >🇦🇺</span
        >
      </figure>

      <div class="flex flex-1 flex-col justify-between">
        <div class="mt-4">
          <h1 class="text-3xl font-bold text-black dark:text-white">
            Danny Bao
          </h1>
          <h2 class="text-hool-text-emphasis dark:text-neutral-300">
            {t({ en: "Software Developer", ja: "ソフトウェア開発者" })}
          </h2>
          <p class="text-sm">
            {t({ en: "Dabbler in many things", ja: "多くのことに興味がある" })}
          </p>
        </div>
        <div class="mt-1 flex gap-0.5">
          <IconLink
            iconName="EmailIcon"
            tooltipText="Contact"
            link={`/${locale}/contact/`}
            openNewTab={false}
            client:load
          />

          <IconLink
            iconName="TwitterXIcon"
            tooltipText="Twitter"
            link="https://x.com/ponktokuDotDev"
            openNewTab={true}
            client:load
          />

          <IconLink
            iconName="GithubIcon"
            tooltipText="GitHub"
            link="https://github.com/ponktoku"
            openNewTab={true}
            client:load
          />

          <IconLink
            iconName="MdiLinkedin"
            tooltipText="LinkedIn"
            link="https://www.linkedin.com/in/danny-bao/"
            openNewTab={true}
            client:load
          />

          <IconLink
            iconName="NotionIcon"
            tooltipText="Notion Resume"
            link="https://ponktoku-dev.notion.site/Danny-Bao-Software-Developer-9897fc6754a94240b8d6df10884d1af1"
            openNewTab={true}
            client:load
          />
        </div>
      </div>
    </div>
  </section>

  <div>
    <h2 class="text-xl font-bold text-black dark:text-hool-white-200">
      {t({ en: "ABOUT", ja: "自己紹介" })}
    </h2>
    <p class="mt-3 leading-relaxed">
      {
        t({
          en: "Hey 👋, I'm Danny. Online I go by the name of ponktoku. Love building for the web and aim to record insights and discoveries along the way.",
          ja: "こんにちは 👋、私の名前はダニーです。オンラインではponktoku(ポンクトク)という名前で活動しています。ウェブ開発が大好きで、その過程で得た気づきや発見を記録していくことを目指しています。",
        })
      }
    </p>

    <div class="mt-3 flex justify-end">
      <a
        href={getRelativeLocaleUrl(locale, "about")}
        class="bg-hool-white-300 px-2 py-1 text-hool-text-emphasis transition hover:bg-black hover:text-white dark:bg-ak-black-300 dark:text-[#d2d2d2] dark:hover:bg-white dark:hover:text-black"
      >
        <span class="align-middle font-bold"
          >{t({ en: "MORE ABOUT ME", ja: "プロフィール" })}</span
        >
        <span>
          <DoubleArrow height="22" width="22" className="inline" />
        </span>
      </a>
    </div>

    <h2 class="mt-12 text-xl font-bold text-black dark:text-hool-white-200">
      {t({ en: "FAVOURITE TECHNOLOGIES", ja: "好きな技術" })}
    </h2>

    <p class="mt-3 leading-relaxed">
      {
        t({
          en: "I love exploring new libraries, programing languages and frameworks. Here is a list of technologies that I love to build with.",
          ja: "新しいライブラリ、プログラミング言語やフレームワークを探求するのが好きです。ここに、私が好きな技術を構築するために使用する技術のリストがあります。",
        })
      }
    </p>

    <ul class="mt-6 grid grid-cols-1 gap-4 sm:grid-cols-2">
      {skills.map((skill) => <Skill {...skill} />)}
    </ul>

    <h2 class="mt-12 text-xl font-bold text-black dark:text-hool-white-200">
      {t({ en: "RECENT POSTS", ja: "最近ブログ" })}
    </h2>

    <ul class="mt-3">
      {
        recentBlogPosts.map((post) => {
          const [, ...slug] = post.slug.split("/");

          return (
            <li>
              <a
                href={`/${locale}/blog/${slug.join("/")}/`}
                class="flex cursor-pointer flex-col items-start justify-between rounded-md py-2 transition hover:bg-hool-white-200 hover:text-black dark:hover:bg-ak-black-200 dark:hover:text-white sm:flex-row sm:items-center"
              >
                <span>{post.data.title}</span>
                <time
                  datetime={post.data.pubDate.toISOString()}
                  class="text-sm"
                >
                  {multiFormatDate(post.data.pubDate, "numeric", locale)}
                </time>
              </a>
            </li>
          );
        })
      }
    </ul>

    <div class="mt-3 flex justify-end">
      <a
        href={getRelativeLocaleUrl(locale, "blog")}
        class="bg-hool-white-300 px-2 py-1 text-hool-text-emphasis transition hover:bg-black hover:text-white dark:bg-ak-black-300 dark:text-[#d2d2d2] dark:hover:bg-white dark:hover:text-black"
      >
        <span class="align-middle font-bold"
          >{t({ en: "READ MORE", ja: "もっと" })}</span
        >
        <span>
          <DoubleArrow height="22" width="22" className="inline" />
        </span>
      </a>
    </div>

    <h2 class="mt-12 text-xl font-bold text-black dark:text-hool-white-200">
      {t({ en: "RECENT NOTES", ja: "最近ノート" })}
    </h2>

    <ul class="mt-3">
      {
        recentNotes.map((note) => {
          const [, ...slug] = note.slug.split("/");

          return (
            <li>
              <a
                href={`/${locale}/notes/${slug.join("/")}/`}
                class="flex cursor-pointer flex-col items-start justify-between rounded-md py-2 hover:bg-hool-white-200 hover:text-black dark:hover:bg-ak-black-200 dark:hover:text-white sm:flex-row sm:items-center"
              >
                <span>{note.data.title}</span>
                <time
                  datetime={note.data.pubDate.toISOString()}
                  class="text-sm"
                >
                  {multiFormatDate(note.data.pubDate, "numeric", locale)}
                </time>
              </a>
            </li>
          );
        })
      }
    </ul>

    <div class="mt-3 flex justify-end">
      <a
        href={getRelativeLocaleUrl(locale, "notes")}
        class="bg-hool-white-300 px-2 py-1 text-hool-text-emphasis transition hover:bg-black hover:text-white dark:bg-ak-black-300 dark:text-[#d2d2d2] dark:hover:bg-white dark:hover:text-black"
      >
        <span class="align-middle font-bold"
          >{t({ en: "READ MORE", ja: "もっと" })}</span
        >
        <span>
          <DoubleArrow height="22" width="22" className="inline" />
        </span>
      </a>
    </div>
  </div>
</BaseLayout>
